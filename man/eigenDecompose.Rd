% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eigenDecompose.R
\name{eigenDecompose}
\alias{eigenDecompose}
\title{Eigendecompose gene expression matrix}
\usage{
eigenDecompose(expData, n = 10, pseudo = TRUE, returnData = TRUE,
  seed = 66)
}
\arguments{
\item{expData}{A matrix object with genes as rows and cells as columns. Unique row names for genes must be provided}

\item{n}{Number of principal components to be computed}

\item{pseudo}{Whether to perform a \code{log2(data + 1)} transformation on expression data}

\item{returnData}{Return training data?}

\item{seed}{Numeric seed for computing the eigenvalues and eigenvectors using the Lanczos algorithm}
}
\value{
A scPred object with three or four filled slots
\itemize{
\item \code{svd}: results from \code{prcomp_irlba} function
\item \code{expVar}: explained variance by each principal component
\item \code{pseudo}: \code{TRUE} if a pseudo-log2 transformation was performed
\item \code{trainData}: if \code{returnData} is TRUE, the training data is returned
}
}
\description{
Performs principal component analysis from a gene expression matrix. Data is centered and scaled by default.
}
\examples{

# Eigendecompose gene expression matrix

# Simulate gene expression data for two groups

class1 <- matrix(rnbinom(10000, 1, 0.1),  ncol = 100)
class2 <- matrix(rnbinom(10000, 1, 0.15),  ncol = 100)

# Create gene expression matrix (rows = cells, colums = genes)

expTrain <- cbind(class1, class2)

# Eigendecompose gene expression matrix

object <- eigenDecompose(expTrain, n = 25)
plotEigen(object)

}
\author{
José Alquicira Hernández
}
\keyword{decomposition,}
\keyword{singular}
\keyword{svd}
\keyword{value}
